{
  "version": 3,
  "sources": ["../../@iconify/vue/dist/offline.mjs"],
  "sourcesContent": ["import { h, defineComponent } from 'vue';\r\n\r\nconst defaultIconDimensions = Object.freeze(\r\n  {\r\n    left: 0,\r\n    top: 0,\r\n    width: 16,\r\n    height: 16\r\n  }\r\n);\r\nconst defaultIconTransformations = Object.freeze({\r\n  rotate: 0,\r\n  vFlip: false,\r\n  hFlip: false\r\n});\r\nconst defaultIconProps = Object.freeze({\r\n  ...defaultIconDimensions,\r\n  ...defaultIconTransformations\r\n});\r\nconst defaultExtendedIconProps = Object.freeze({\r\n  ...defaultIconProps,\r\n  body: \"\",\r\n  hidden: false\r\n});\r\n\r\nfunction mergeIconTransformations(obj1, obj2) {\r\n  const result = {};\r\n  if (!obj1.hFlip !== !obj2.hFlip) {\r\n    result.hFlip = true;\r\n  }\r\n  if (!obj1.vFlip !== !obj2.vFlip) {\r\n    result.vFlip = true;\r\n  }\r\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\r\n  if (rotate) {\r\n    result.rotate = rotate;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction mergeIconData(parent, child) {\r\n  const result = mergeIconTransformations(parent, child);\r\n  for (const key in defaultExtendedIconProps) {\r\n    if (key in defaultIconTransformations) {\r\n      if (key in parent && !(key in result)) {\r\n        result[key] = defaultIconTransformations[key];\r\n      }\r\n    } else if (key in child) {\r\n      result[key] = child[key];\r\n    } else if (key in parent) {\r\n      result[key] = parent[key];\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getIconsTree(data, names) {\r\n  const icons = data.icons;\r\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\r\n  const resolved = /* @__PURE__ */ Object.create(null);\r\n  function resolve(name) {\r\n    if (icons[name]) {\r\n      return resolved[name] = [];\r\n    }\r\n    if (!(name in resolved)) {\r\n      resolved[name] = null;\r\n      const parent = aliases[name] && aliases[name].parent;\r\n      const value = parent && resolve(parent);\r\n      if (value) {\r\n        resolved[name] = [parent].concat(value);\r\n      }\r\n    }\r\n    return resolved[name];\r\n  }\r\n  (Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\r\n  return resolved;\r\n}\r\n\r\nfunction internalGetIconData(data, name, tree) {\r\n  const icons = data.icons;\r\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\r\n  let currentProps = {};\r\n  function parse(name2) {\r\n    currentProps = mergeIconData(\r\n      icons[name2] || aliases[name2],\r\n      currentProps\r\n    );\r\n  }\r\n  parse(name);\r\n  tree.forEach(parse);\r\n  return mergeIconData(data, currentProps);\r\n}\r\n\r\nfunction parseIconSet(data, callback) {\r\n  const names = [];\r\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\r\n    return names;\r\n  }\r\n  if (data.not_found instanceof Array) {\r\n    data.not_found.forEach((name) => {\r\n      callback(name, null);\r\n      names.push(name);\r\n    });\r\n  }\r\n  const tree = getIconsTree(data);\r\n  for (const name in tree) {\r\n    const item = tree[name];\r\n    if (item) {\r\n      callback(name, internalGetIconData(data, name, item));\r\n      names.push(name);\r\n    }\r\n  }\r\n  return names;\r\n}\r\n\r\nconst optionalPropertyDefaults = {\r\n  provider: \"\",\r\n  aliases: {},\r\n  not_found: {},\r\n  ...defaultIconDimensions\r\n};\r\nfunction checkOptionalProps(item, defaults) {\r\n  for (const prop in defaults) {\r\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction quicklyValidateIconSet(obj) {\r\n  if (typeof obj !== \"object\" || obj === null) {\r\n    return null;\r\n  }\r\n  const data = obj;\r\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\r\n    return null;\r\n  }\r\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\r\n    return null;\r\n  }\r\n  const icons = data.icons;\r\n  for (const name in icons) {\r\n    const icon = icons[name];\r\n    if (\r\n      // Name cannot be empty\r\n      !name || // Must have body\r\n      typeof icon.body !== \"string\" || // Check other props\r\n      !checkOptionalProps(\r\n        icon,\r\n        defaultExtendedIconProps\r\n      )\r\n    ) {\r\n      return null;\r\n    }\r\n  }\r\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\r\n  for (const name in aliases) {\r\n    const icon = aliases[name];\r\n    const parent = icon.parent;\r\n    if (\r\n      // Name cannot be empty\r\n      !name || // Parent must be set and point to existing icon\r\n      typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || // Check other props\r\n      !checkOptionalProps(\r\n        icon,\r\n        defaultExtendedIconProps\r\n      )\r\n    ) {\r\n      return null;\r\n    }\r\n  }\r\n  return data;\r\n}\r\n\r\nconst defaultIconSizeCustomisations = Object.freeze({\r\n  width: null,\r\n  height: null\r\n});\r\nconst defaultIconCustomisations = Object.freeze({\r\n  // Dimensions\r\n  ...defaultIconSizeCustomisations,\r\n  // Transformations\r\n  ...defaultIconTransformations\r\n});\r\n\r\nfunction mergeCustomisations(defaults, item) {\r\n  const result = {\r\n    ...defaults\r\n  };\r\n  for (const key in item) {\r\n    const value = item[key];\r\n    const valueType = typeof value;\r\n    if (key in defaultIconSizeCustomisations) {\r\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\r\n        result[key] = value;\r\n      }\r\n    } else if (valueType === typeof result[key]) {\r\n      result[key] = key === \"rotate\" ? value % 4 : value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nconst separator = /[\\s,]+/;\r\nfunction flipFromString(custom, flip) {\r\n  flip.split(separator).forEach((str) => {\r\n    const value = str.trim();\r\n    switch (value) {\r\n      case \"horizontal\":\r\n        custom.hFlip = true;\r\n        break;\r\n      case \"vertical\":\r\n        custom.vFlip = true;\r\n        break;\r\n    }\r\n  });\r\n}\r\n\r\nfunction rotateFromString(value, defaultValue = 0) {\r\n  const units = value.replace(/^-?[0-9.]*/, \"\");\r\n  function cleanup(value2) {\r\n    while (value2 < 0) {\r\n      value2 += 4;\r\n    }\r\n    return value2 % 4;\r\n  }\r\n  if (units === \"\") {\r\n    const num = parseInt(value);\r\n    return isNaN(num) ? 0 : cleanup(num);\r\n  } else if (units !== value) {\r\n    let split = 0;\r\n    switch (units) {\r\n      case \"%\":\r\n        split = 25;\r\n        break;\r\n      case \"deg\":\r\n        split = 90;\r\n    }\r\n    if (split) {\r\n      let num = parseFloat(value.slice(0, value.length - units.length));\r\n      if (isNaN(num)) {\r\n        return 0;\r\n      }\r\n      num = num / split;\r\n      return num % 1 === 0 ? cleanup(num) : 0;\r\n    }\r\n  }\r\n  return defaultValue;\r\n}\r\n\r\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\r\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\r\nfunction calculateSize(size, ratio, precision) {\r\n  if (ratio === 1) {\r\n    return size;\r\n  }\r\n  precision = precision || 100;\r\n  if (typeof size === \"number\") {\r\n    return Math.ceil(size * ratio * precision) / precision;\r\n  }\r\n  if (typeof size !== \"string\") {\r\n    return size;\r\n  }\r\n  const oldParts = size.split(unitsSplit);\r\n  if (oldParts === null || !oldParts.length) {\r\n    return size;\r\n  }\r\n  const newParts = [];\r\n  let code = oldParts.shift();\r\n  let isNumber = unitsTest.test(code);\r\n  while (true) {\r\n    if (isNumber) {\r\n      const num = parseFloat(code);\r\n      if (isNaN(num)) {\r\n        newParts.push(code);\r\n      } else {\r\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\r\n      }\r\n    } else {\r\n      newParts.push(code);\r\n    }\r\n    code = oldParts.shift();\r\n    if (code === void 0) {\r\n      return newParts.join(\"\");\r\n    }\r\n    isNumber = !isNumber;\r\n  }\r\n}\r\n\r\nfunction splitSVGDefs(content, tag = \"defs\") {\r\n  let defs = \"\";\r\n  const index = content.indexOf(\"<\" + tag);\r\n  while (index >= 0) {\r\n    const start = content.indexOf(\">\", index);\r\n    const end = content.indexOf(\"</\" + tag);\r\n    if (start === -1 || end === -1) {\r\n      break;\r\n    }\r\n    const endEnd = content.indexOf(\">\", end);\r\n    if (endEnd === -1) {\r\n      break;\r\n    }\r\n    defs += content.slice(start + 1, end).trim();\r\n    content = content.slice(0, index).trim() + content.slice(endEnd + 1);\r\n  }\r\n  return {\r\n    defs,\r\n    content\r\n  };\r\n}\r\nfunction mergeDefsAndContent(defs, content) {\r\n  return defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\r\n}\r\nfunction wrapSVGContent(body, start, end) {\r\n  const split = splitSVGDefs(body);\r\n  return mergeDefsAndContent(split.defs, start + split.content + end);\r\n}\r\n\r\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\r\nfunction iconToSVG(icon, customisations) {\r\n  const fullIcon = {\r\n    ...defaultIconProps,\r\n    ...icon\r\n  };\r\n  const fullCustomisations = {\r\n    ...defaultIconCustomisations,\r\n    ...customisations\r\n  };\r\n  const box = {\r\n    left: fullIcon.left,\r\n    top: fullIcon.top,\r\n    width: fullIcon.width,\r\n    height: fullIcon.height\r\n  };\r\n  let body = fullIcon.body;\r\n  [fullIcon, fullCustomisations].forEach((props) => {\r\n    const transformations = [];\r\n    const hFlip = props.hFlip;\r\n    const vFlip = props.vFlip;\r\n    let rotation = props.rotate;\r\n    if (hFlip) {\r\n      if (vFlip) {\r\n        rotation += 2;\r\n      } else {\r\n        transformations.push(\r\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\r\n        );\r\n        transformations.push(\"scale(-1 1)\");\r\n        box.top = box.left = 0;\r\n      }\r\n    } else if (vFlip) {\r\n      transformations.push(\r\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\r\n      );\r\n      transformations.push(\"scale(1 -1)\");\r\n      box.top = box.left = 0;\r\n    }\r\n    let tempValue;\r\n    if (rotation < 0) {\r\n      rotation -= Math.floor(rotation / 4) * 4;\r\n    }\r\n    rotation = rotation % 4;\r\n    switch (rotation) {\r\n      case 1:\r\n        tempValue = box.height / 2 + box.top;\r\n        transformations.unshift(\r\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\r\n        );\r\n        break;\r\n      case 2:\r\n        transformations.unshift(\r\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\r\n        );\r\n        break;\r\n      case 3:\r\n        tempValue = box.width / 2 + box.left;\r\n        transformations.unshift(\r\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\r\n        );\r\n        break;\r\n    }\r\n    if (rotation % 2 === 1) {\r\n      if (box.left !== box.top) {\r\n        tempValue = box.left;\r\n        box.left = box.top;\r\n        box.top = tempValue;\r\n      }\r\n      if (box.width !== box.height) {\r\n        tempValue = box.width;\r\n        box.width = box.height;\r\n        box.height = tempValue;\r\n      }\r\n    }\r\n    if (transformations.length) {\r\n      body = wrapSVGContent(\r\n        body,\r\n        '<g transform=\"' + transformations.join(\" \") + '\">',\r\n        \"</g>\"\r\n      );\r\n    }\r\n  });\r\n  const customisationsWidth = fullCustomisations.width;\r\n  const customisationsHeight = fullCustomisations.height;\r\n  const boxWidth = box.width;\r\n  const boxHeight = box.height;\r\n  let width;\r\n  let height;\r\n  if (customisationsWidth === null) {\r\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\r\n    width = calculateSize(height, boxWidth / boxHeight);\r\n  } else {\r\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\r\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\r\n  }\r\n  const attributes = {};\r\n  const setAttr = (prop, value) => {\r\n    if (!isUnsetKeyword(value)) {\r\n      attributes[prop] = value.toString();\r\n    }\r\n  };\r\n  setAttr(\"width\", width);\r\n  setAttr(\"height\", height);\r\n  const viewBox = [box.left, box.top, boxWidth, boxHeight];\r\n  attributes.viewBox = viewBox.join(\" \");\r\n  return {\r\n    attributes,\r\n    viewBox,\r\n    body\r\n  };\r\n}\r\n\r\nconst regex = /\\sid=\"(\\S+)\"/g;\r\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\r\nlet counter = 0;\r\nfunction replaceIDs(body, prefix = randomPrefix) {\r\n  const ids = [];\r\n  let match;\r\n  while (match = regex.exec(body)) {\r\n    ids.push(match[1]);\r\n  }\r\n  if (!ids.length) {\r\n    return body;\r\n  }\r\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\r\n  ids.forEach((id) => {\r\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\r\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    body = body.replace(\r\n      // Allowed characters before id: [#;\"]\r\n      // Allowed characters after id: [)\"], .[a-z]\r\n      new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\r\n      \"$1\" + newID + suffix + \"$3\"\r\n    );\r\n  });\r\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\r\n  return body;\r\n}\r\n\r\nfunction iconToHTML(body, attributes) {\r\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\r\n  for (const attr in attributes) {\r\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\r\n  }\r\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\r\n}\r\n\r\nfunction encodeSVGforURL(svg) {\r\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\r\n}\r\nfunction svgToData(svg) {\r\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\r\n}\r\nfunction svgToURL(svg) {\r\n  return 'url(\"' + svgToData(svg) + '\")';\r\n}\r\n\r\nconst defaultExtendedIconCustomisations = {\r\n    ...defaultIconCustomisations,\r\n    inline: false,\r\n};\r\n\r\n/**\r\n * Default SVG attributes\r\n */\r\nconst svgDefaults = {\r\n    'xmlns': 'http://www.w3.org/2000/svg',\r\n    'xmlns:xlink': 'http://www.w3.org/1999/xlink',\r\n    'aria-hidden': true,\r\n    'role': 'img',\r\n};\r\n/**\r\n * Style modes\r\n */\r\nconst commonProps = {\r\n    display: 'inline-block',\r\n};\r\nconst monotoneProps = {\r\n    backgroundColor: 'currentColor',\r\n};\r\nconst coloredProps = {\r\n    backgroundColor: 'transparent',\r\n};\r\n// Dynamically add common props to variables above\r\nconst propsToAdd = {\r\n    Image: 'var(--svg)',\r\n    Repeat: 'no-repeat',\r\n    Size: '100% 100%',\r\n};\r\nconst propsToAddTo = {\r\n    webkitMask: monotoneProps,\r\n    mask: monotoneProps,\r\n    background: coloredProps,\r\n};\r\nfor (const prefix in propsToAddTo) {\r\n    const list = propsToAddTo[prefix];\r\n    for (const prop in propsToAdd) {\r\n        list[prefix + prop] = propsToAdd[prop];\r\n    }\r\n}\r\n/**\r\n * Aliases for customisations.\r\n * In Vue 'v-' properties are reserved, so v-flip must be renamed\r\n */\r\nconst customisationAliases = {};\r\n['horizontal', 'vertical'].forEach((prefix) => {\r\n    const attr = prefix.slice(0, 1) + 'Flip';\r\n    // vertical-flip\r\n    customisationAliases[prefix + '-flip'] = attr;\r\n    // v-flip\r\n    customisationAliases[prefix.slice(0, 1) + '-flip'] = attr;\r\n    // verticalFlip\r\n    customisationAliases[prefix + 'Flip'] = attr;\r\n});\r\n/**\r\n * Fix size: add 'px' to numbers\r\n */\r\nfunction fixSize(value) {\r\n    return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\r\n}\r\n/**\r\n * Render icon\r\n */\r\nconst render = (\r\n// Icon must be validated before calling this function\r\nicon, \r\n// Partial properties\r\nprops) => {\r\n    // Split properties\r\n    const customisations = mergeCustomisations(defaultExtendedIconCustomisations, props);\r\n    const componentProps = { ...svgDefaults };\r\n    // Check mode\r\n    const mode = props.mode || 'svg';\r\n    // Copy style\r\n    const style = {};\r\n    const propsStyle = props.style;\r\n    const customStyle = typeof propsStyle === 'object' && !(propsStyle instanceof Array)\r\n        ? propsStyle\r\n        : {};\r\n    // Get element properties\r\n    for (let key in props) {\r\n        const value = props[key];\r\n        if (value === void 0) {\r\n            continue;\r\n        }\r\n        switch (key) {\r\n            // Properties to ignore\r\n            case 'icon':\r\n            case 'style':\r\n            case 'onLoad':\r\n            case 'mode':\r\n            case 'ssr':\r\n                break;\r\n            // Boolean attributes\r\n            case 'inline':\r\n            case 'hFlip':\r\n            case 'vFlip':\r\n                customisations[key] =\r\n                    value === true || value === 'true' || value === 1;\r\n                break;\r\n            // Flip as string: 'horizontal,vertical'\r\n            case 'flip':\r\n                if (typeof value === 'string') {\r\n                    flipFromString(customisations, value);\r\n                }\r\n                break;\r\n            // Color: override style\r\n            case 'color':\r\n                style.color = value;\r\n                break;\r\n            // Rotation as string\r\n            case 'rotate':\r\n                if (typeof value === 'string') {\r\n                    customisations[key] = rotateFromString(value);\r\n                }\r\n                else if (typeof value === 'number') {\r\n                    customisations[key] = value;\r\n                }\r\n                break;\r\n            // Remove aria-hidden\r\n            case 'ariaHidden':\r\n            case 'aria-hidden':\r\n                // Vue transforms 'aria-hidden' property to 'ariaHidden'\r\n                if (value !== true && value !== 'true') {\r\n                    delete componentProps['aria-hidden'];\r\n                }\r\n                break;\r\n            default: {\r\n                const alias = customisationAliases[key];\r\n                if (alias) {\r\n                    // Aliases for boolean customisations\r\n                    if (value === true || value === 'true' || value === 1) {\r\n                        customisations[alias] = true;\r\n                    }\r\n                }\r\n                else if (defaultExtendedIconCustomisations[key] === void 0) {\r\n                    // Copy missing property if it does not exist in customisations\r\n                    componentProps[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Generate icon\r\n    const item = iconToSVG(icon, customisations);\r\n    const renderAttribs = item.attributes;\r\n    // Inline display\r\n    if (customisations.inline) {\r\n        style.verticalAlign = '-0.125em';\r\n    }\r\n    if (mode === 'svg') {\r\n        // Add style\r\n        componentProps.style = {\r\n            ...style,\r\n            ...customStyle,\r\n        };\r\n        // Add icon stuff\r\n        Object.assign(componentProps, renderAttribs);\r\n        // Counter for ids based on \"id\" property to render icons consistently on server and client\r\n        let localCounter = 0;\r\n        let id = props.id;\r\n        if (typeof id === 'string') {\r\n            // Convert '-' to '_' to avoid errors in animations\r\n            id = id.replace(/-/g, '_');\r\n        }\r\n        // Add innerHTML and style to props\r\n        componentProps['innerHTML'] = replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyVue');\r\n        // Render icon\r\n        return h('svg', componentProps);\r\n    }\r\n    // Render <span> with style\r\n    const { body, width, height } = icon;\r\n    const useMask = mode === 'mask' ||\r\n        (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\r\n    // Generate SVG\r\n    const html = iconToHTML(body, {\r\n        ...renderAttribs,\r\n        width: width + '',\r\n        height: height + '',\r\n    });\r\n    // Generate style\r\n    componentProps.style = {\r\n        ...style,\r\n        '--svg': svgToURL(html),\r\n        'width': fixSize(renderAttribs.width),\r\n        'height': fixSize(renderAttribs.height),\r\n        ...commonProps,\r\n        ...(useMask ? monotoneProps : coloredProps),\r\n        ...customStyle,\r\n    };\r\n    return h('span', componentProps);\r\n};\r\n\r\n/**\r\n * Storage for icons referred by name\r\n */\r\nconst storage = Object.create(null);\r\n/**\r\n * Add icon to storage, allowing to call it by name\r\n *\r\n * @param name\r\n * @param data\r\n */\r\nfunction addIcon(name, data) {\r\n    storage[name] = data;\r\n}\r\n/**\r\n * Add collection to storage, allowing to call icons by name\r\n *\r\n * @param data Icon set\r\n * @param prefix Optional prefix to add to icon names, true (default) if prefix from icon set should be used.\r\n */\r\nfunction addCollection(data, prefix) {\r\n    const iconPrefix = typeof prefix === 'string'\r\n        ? prefix\r\n        : prefix !== false && typeof data.prefix === 'string'\r\n            ? data.prefix + ':'\r\n            : '';\r\n    quicklyValidateIconSet(data) &&\r\n        parseIconSet(data, (name, icon) => {\r\n            if (icon) {\r\n                storage[iconPrefix + name] = icon;\r\n            }\r\n        });\r\n}\r\n/**\r\n * Component\r\n */\r\nconst Icon = defineComponent({\r\n    // Do not inherit other attributes: it is handled by render()\r\n    inheritAttrs: false,\r\n    // Render icon\r\n    render() {\r\n        const props = this.$attrs;\r\n        // Check icon\r\n        const propsIcon = props.icon;\r\n        const icon = typeof propsIcon === 'string'\r\n            ? storage[propsIcon]\r\n            : typeof propsIcon === 'object'\r\n                ? propsIcon\r\n                : null;\r\n        // Validate icon object\r\n        if (icon === null ||\r\n            typeof icon !== 'object' ||\r\n            typeof icon.body !== 'string') {\r\n            return this.$slots.default ? this.$slots.default() : null;\r\n        }\r\n        // Valid icon: render it\r\n        return render({\r\n            ...defaultIconProps,\r\n            ...icon,\r\n        }, props);\r\n    },\r\n});\r\n\r\nexport { Icon, addCollection, addIcon };\r\n"],
  "mappings": "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",
  "names": []
}
